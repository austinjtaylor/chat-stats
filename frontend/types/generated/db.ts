/**
 * AUTO-GENERATED FILE - DO NOT EDIT DIRECTLY
 *
 * This file is automatically generated from backend Pydantic models.
 * To update these types, run: npm run generate-types
 *
 * Source models are located in:
 * - backend/models/db.py
 */

/**
 * Model for a sports team matching UFA API structure
 */
export interface Team {
  id?: number | null;
  team_id: string;
  year: number;
  city: string;
  name: string;
  full_name: string;
  abbrev: string;
  wins?: number;
  losses?: number;
  ties?: number;
  standing: number;
  division_id?: string | null;
  division_name?: string | null;
}

/**
 * Model for a player matching UFA API structure
 */
export interface Player {
  id?: number | null;
  player_id: string;
  first_name: string;
  last_name: string;
  full_name: string;
  team_id?: string | null;
  active?: boolean;
  year?: number | null;
  jersey_number?: number | null;
}

/**
 * Model for a game matching UFA API structure
 */
export interface Game {
  id?: number | null;
  game_id: string;
  away_team_id: string;
  home_team_id: string;
  away_score?: number | null;
  home_score?: number | null;
  status: string;
  start_timestamp?: string | null;
  start_timezone?: string | null;
  streaming_url?: string | null;
  update_timestamp?: string | null;
  week?: string | null;
  location?: string | null;
  year: number;
}

/**
 * Model for Ultimate Frisbee player statistics in a single game matching UFA API
 */
export interface PlayerGameStats {
  id?: number | null;
  player_id: string;
  game_id: string;
  team_id: string;
  year: number;
  assists?: number;
  goals?: number;
  hockey_assists?: number;
  completions?: number;
  throw_attempts?: number;
  throwaways?: number;
  stalls?: number;
  callahans_thrown?: number;
  yards_received?: number;
  yards_thrown?: number;
  hucks_attempted?: number;
  hucks_completed?: number;
  catches?: number;
  drops?: number;
  blocks?: number;
  callahans?: number;
  pulls?: number;
  ob_pulls?: number;
  recorded_pulls?: number;
  recorded_pulls_hangtime?: number | null;
  o_points_played?: number;
  o_points_scored?: number;
  d_points_played?: number;
  d_points_scored?: number;
  seconds_played?: number;
  o_opportunities?: number;
  o_opportunity_scores?: number;
  d_opportunities?: number;
  d_opportunity_stops?: number;
}

/**
 * Model for aggregated Ultimate Frisbee player season statistics matching UFA API
 */
export interface PlayerSeasonStats {
  id?: number | null;
  player_id: string;
  team_id: string;
  year: number;
  total_assists?: number;
  total_goals?: number;
  total_hockey_assists?: number;
  total_completions?: number;
  total_throw_attempts?: number;
  total_throwaways?: number;
  total_stalls?: number;
  total_callahans_thrown?: number;
  total_yards_received?: number;
  total_yards_thrown?: number;
  total_hucks_attempted?: number;
  total_hucks_completed?: number;
  total_catches?: number;
  total_drops?: number;
  total_blocks?: number;
  total_callahans?: number;
  total_pulls?: number;
  total_ob_pulls?: number;
  total_recorded_pulls?: number;
  total_recorded_pulls_hangtime?: number | null;
  total_o_points_played?: number;
  total_o_points_scored?: number;
  total_d_points_played?: number;
  total_d_points_scored?: number;
  total_seconds_played?: number;
  total_o_opportunities?: number;
  total_o_opportunity_scores?: number;
  total_d_opportunities?: number;
  total_d_opportunity_stops?: number;
  calculated_plus_minus?: number | null;
  completion_percentage?: number | null;
}

/**
 * Model for team season statistics matching UFA API
 */
export interface TeamSeasonStats {
  id?: number | null;
  team_id: string;
  year: number;
  wins?: number;
  losses?: number;
  ties?: number;
  standing?: number | null;
  division_id?: string | null;
  division_name?: string | null;
  points_for?: number;
  points_against?: number;
}

/**
 * Model for a statistics query request
 */
export interface StatsQuery {
  query_type: string;
  filters?: Record<string, any>;
  aggregations?: string[];
  sort_by?: string | null;
  limit?: number;
}

